{"version":3,"sources":["webpack:///./images/bonsai_graph.png","webpack:///./src/components/project-item.js","webpack:///./src/pages/projects.js","webpack:///./images/picassoImg.png","webpack:///./src/components/layout.js","webpack:///./src/components/project-item.module.css"],"names":["module","exports","ProjectItem","props","titleElem","undefined","titlenolink","className","to","link","title","projectItemStyles","projectitem","src","img","alt","authors","event","children","Research","id","style","listStyle","float","display","bonsaiImg","picassoImg","ListLink","fontSize","marginRight","Layout","margin","maxWidth","padding","marginBottom","paddingBottom"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,4D,qKCI5B,SAASC,EAAYC,GAClC,IAAIC,EAMJ,OAJEA,OADwBC,IAAtBF,EAAMG,YACI,uBAAGC,UAAU,oBAAb,IAAkCJ,EAAMG,YAAxC,MAEA,kBAAC,IAAD,CAAME,GAAIL,EAAMM,MAAhB,IAAwBN,EAAMO,MAA9B,KAGZ,wBAAIH,UAAWI,IAAkBC,aAC7B,yBAAKL,UAAU,UAAUM,IAAKV,EAAMW,IAAKC,IAAKZ,EAAMY,MACpD,yBAAKR,UAAU,qBACVH,EACD,uBAAGG,UAAU,gBAAgBJ,EAAMa,SACnC,uBAAGT,UAAU,cAAcJ,EAAMc,OAChCd,EAAMe,W,8CCVJ,SAASC,IACtB,OACE,kBAAC,IAAD,KACE,wCACA,yBAAKC,GAAG,qBACN,wBAAIC,MAAO,CAAEC,UAAU,OAASC,MAAM,OAASC,QAAQ,UACrD,kBAACtB,EAAD,CAAaY,IAAKW,IACVV,IAAI,eAAeL,MAAM,4CACzBD,KAAK,mBACLO,QAAQ,4CACRC,MAAM,yBACR,uBAAGV,UAAU,mBAAb,2iBAUN,kBAACL,EAAD,CAAaY,IAAKY,IACVX,IAAI,uBAAuBL,MAAM,iBACjCD,KAAK,qDACLQ,MAAM,iBACR,uBAAGV,UAAU,mBAAb,2iBAQN,kBAACL,EAAD,CAAaY,IAAI,+CACTC,IAAI,6BAA6BL,MAAM,sBACvCD,KAAK,uCACLQ,MAAM,yDACR,uBAAGV,UAAU,mBAAb,wY,uBC7ChBP,EAAOC,QAAU,IAA0B,0D,kCCA3C,uEAEM0B,EAAW,SAAAxB,GAAK,OACpB,wBAAIkB,MAAO,CAAEO,SAAS,WAAaJ,QAAQ,eAAiBK,YAAY,SACtE,kBAAC,IAAD,CAAMrB,GAAIL,EAAMK,IAAKL,EAAMe,YAGhB,SAASY,EAAT,GAA+B,IAAbZ,EAAY,EAAZA,SAC/B,OACE,yBAAKG,MAAO,CAAEU,OAAO,YAAcC,SAAU,IAAKC,QAAQ,WACxD,4BAAQZ,MAAO,CAAEa,aAAa,SAAWC,cAAc,SACrD,wBAAId,MAAO,CAAEC,UAAU,OAASC,MAAM,UACpC,kBAACI,EAAD,CAAUnB,GAAG,KAAb,QACA,kBAACmB,EAAD,CAAUnB,GAAG,UAAb,QACA,kBAACmB,EAAD,CAAUnB,GAAG,cAAb,cAGHU,K,8CChBPlB,EAAOC,QAAU,CAAC,YAAc","file":"component---src-pages-projects-js-e278cf8d5ba6edd164fe.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/bonsai_graph-e88c351e1457b46ce3d9c2a53add28fc.png\";","import React from \"react\"\nimport projectItemStyles from \"./project-item.module.css\"\nimport { Link } from \"gatsby\"\n\nexport default function ProjectItem(props) {\n  var titleElem;\n  if (props.titlenolink !== undefined) {\n    titleElem = <p className=\"titlenolink-text\"> {props.titlenolink}> </p>\n  } else {\n    titleElem = <Link to={props.link}> {props.title} </Link>\n  }\n  return (\n    <li className={projectItemStyles.projectitem}>\n        <img className=\"project\" src={props.img} alt={props.alt}/>\n        <div className=\"project-item-text\">\n            {titleElem}\n            <p className=\"authors-text\">{props.authors}</p>\n            <p className=\"event-text\">{props.event}</p>\n            {props.children}\n        </div>\n    </li>\n  )\n}\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport \"./projects.css\"\n\nimport ProjectItem from \"../components/project-item\"\nimport bonsaiImg from \"../../images/bonsai_graph.png\"\nimport picassoImg from \"../../images/picassoImg.png\"\n\nexport default function Research() {\n  return (\n    <Layout>\n      <h2>Projects</h2>\n      <div id=\"project-container\">\n        <ul style={{ listStyle: `none`, float: `left`, display: `block` }}>\n          <ProjectItem img={bonsaiImg}\n                  alt=\"Bonsai Graph\" title=\"Growing a Test Corpus with Bonsai Fuzzing\"\n                  link=\"/pdfs/bonsai.pdf\"\n                  authors=\"Vasudev Vikram, Rohan Padhye, Koushik Sen\"\n                  event=\"Accepted at ICSE 2021\">\n                <p className=\"project-summary\">  This paper presents a coverage-guided grammar based fuzzing technique for automatically generating a corpus\n                    of concise test inputs for programs such as compilers. We walk through a case study of a compiler designed for education and\n                    the corresponding problem of generating meaningful test cases\n                    to provide to students. Our key insight is that instead of\n                    attempting to minimize convoluted fuzzer-generated test inputs,\n                    we can instead grow concise test inputs by construction using\n                    a form of iterative deepening. We call this approach bonsai\n                    fuzzing.\n              </p>\n          </ProjectItem>\n          <ProjectItem img={picassoImg}\n                  alt=\"Take a Picasso Image\" title=\"Take a Picasso\"\n                  link=\"https://devpost.com/software/take-a-picasso-6omuk1\"\n                  event=\"Cal Hacks 3.0\">\n                <p className=\"project-summary\">\n                    When the user enters the booth, all they have to say is “Take a Pic!” and our iOS app, using speech recognition,\n                    is triggered and takes a picture. From there, we used OpenCV with Python for computer vision to blur the image,\n                    find the edges of the photo, and extract the major features of the portrait to make the image look like a sketch.\n                    The picture is then vectorized to be drawn into one continuous path of many small line segments.\n                    These lines are then sent to the arduino behind the easel, which moves the motors accordingly to draw the picture!\n                </p>\n          </ProjectItem>\n          <ProjectItem img=\"https://play.pokemonshowdown.com/favicon.ico\"\n                  alt=\"Pokemon Showdown Bot Image\" title=\"Pokemon Showdown AI\"\n                  link=\"https://github.com/vasumv/pokemon_ai\"\n                  event=\"Greater San Diego Science and Engineering Fair (2015)\">\n                <p className=\"project-summary\">\nThis project displayed an application of machine\nlearning to the minimax algorithm in the setting of an online Pokemon game, which has\nhidden information. It focused on the problem of predicting the set of possible actions\nan opponent might have. Relevant Pokemon game data was obtained and the minimax\nalgorithm was implemented to return the best action given a Pokemon game state.\n    </p>\n          </ProjectItem>\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\n","module.exports = __webpack_public_path__ + \"static/picassoImg-6e049171f05946cfcabb808a83a0c8cd.png\";","import React from \"react\"\nimport { Link } from \"gatsby\"\nconst ListLink = props => (\n  <li style={{ fontSize: `xx-large`, display: `inline-block`, marginRight: `2rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\nexport default function Layout({ children }) {\n  return (\n    <div style={{ margin: `3rem auto`, maxWidth: 815, padding: `0 1rem` }}>\n      <header style={{ marginBottom: `1.5rem`, paddingBottom: `2rem` }}>\n        <ul style={{ listStyle: `none`, float: `right` }}>\n          <ListLink to=\"/\">Home</ListLink>\n          <ListLink to=\"/work/\">Work</ListLink>\n          <ListLink to=\"/projects/\">Projects</ListLink>\n        </ul>\n      </header>\n      {children}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectitem\":\"project-item-module--projectitem--36r7B\"};"],"sourceRoot":""}